# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name _;

    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    server_name _;

    ssl_certificate     /etc/nginx/certs/cert.crt;
    ssl_certificate_key /etc/nginx/certs/cert.key;

    # Proxy to Flask (frontend)
    location / {
        proxy_pass http://frontend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;              # Ensure compatibility with chunked transfer encoding
        proxy_set_header Connection "";      # Forward all headers correctly
        #proxy_buffering off;                 # Disable buffering for real-time requests (if necessary)
    }

    # Proxy /api to FastAPI (backend)
    location /api {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy /api/docs to FastAPI (backend) docs
    location /api/docs {
    proxy_pass http://backend:8000/docs;
}
}
